<?php
namespace Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\ClassMetadata;
use Doctrine\DBAL\Types\Type;
use Doctrine\ORM\EntityManagerInterface;

use Sfynx\CoreBundle\Layers\Infrastructure\Cache\CacheQuery;
use Sfynx\CoreBundle\Layers\Domain\Repository\Command\CommandRepositoryInterface;
use Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\Traits\TraitGeneral;
use Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\Traits\TraitSave;
use Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\Traits\TraitProvider;
use Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Traits\TraitResultFunction;

/**
 * Abstract Command Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @category   Sfynx\CoreBundle\Layers
 * @package    Infrastructure
 * @subpackage Persistence\Adapter\Generalisation\Orm
 * @abstract
 * @author     Etienne de Longeaux <etienne.delongeaux@gmail.com>
 * @copyright  2015 PI-GROUPE
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    2.3
 * @link       http://opensource.org/licenses/gpl-license.php
 * @since      2015-02-17
 */
abstract class AbstractCommandRepository extends EntityRepository implements CommandRepositoryInterface
{
    use TraitResultFunction;
    use TraitProvider;
    use TraitSave;
    use TraitGeneral;

    /**
     * {@inheritdoc}
     */
    public function getCacheFactory(): CacheQuery
    {
        return new CacheQuery($this->_em);
    }

    /**
     * {@inheritdoc}
     */
    public function getEm(): EntityManagerInterface
    {
        return $this->_em;
    }

    /**
     * {@inheritdoc}
     */
    public function getEntityName(): string
    {
        return $this->_entityName;
    }

    /**
     * {@inheritdoc}
     */
    public function getTableName(): string
    {
        return $this->getClassMetadata()->getTableName();
    }

    /**
     * {@inheritdoc}
     */
    public function setIdGenerator(): CommandRepositoryInterface
    {
        $this->getClassMetadata()->setIdGenerator(new \Doctrine\ORM\Id\AssignedGenerator());
        return $this;
    }
}