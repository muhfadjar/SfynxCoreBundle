default:
    widgets:
        infrastructure:
            widget_security_parse: true
            widget_infra_class:
            #
            # MOVIES REPOSITORIES
            #
            - CommandMovieRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Command\Orm\MovieRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                  options:
                      implements: ['Domain\Repository\Command\MovieCommandRepositoryInterface']
            - QueryMovieRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\MovieRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                  options:
                      implements: ['Domain\Repository\Query\MovieQueryRepositoryInterface']
            #
            # PRICES REPOSITORIES
            #
            - CommandPriceRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Command\Orm\PriceRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                  options:
                      implements: ['Domain\Repository\Command\PriceCommandRepositoryInterface']
            - QueryPriceRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\PriceRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                  options:
                      implements: ['Domain\Repository\Query\PriceQueryRepositoryInterface']
            #
            # GENRE REPOSITORIES
            #
            - CommandGenreRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Command\Orm\GenreRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                  options:
                      implements: ['Domain\Repository\Command\GenreCommandRepositoryInterface']
            - QueryGenreRepository:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\GenreRepository
                  comments:
                  - 'This class was generated by the Doctrine ORM. Add your own custom'
                  - 'repository methods below.'
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                  options:
                      implements: ['Domain\Repository\Query\GenreQueryRepositoryInterface']
            #
            # MOVIE TRANSFORMER/QUERY BUILDER
            #
            - FindMovieQueryBuilder:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Movie\QueryBuilder\FindMovieQueryBuilder
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['Doctrine\ORM\QueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
            - FindMovieQueryTransformer:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Movie\QueryTransformer\FindMovieQueryTransformer
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['MyContext\Infrastructure\Persistence\Adapter\Query\Orm\Movie\QueryBuilder\FindMovieQueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindMovieQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
            #
            # GENRE TRANSFORMER/QUERY BUILDER
            #
            - FindGenreQueryBuilder:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Genre\QueryBuilder\FindGenreQueryBuilder
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['Doctrine\ORM\QueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
            - FindGenreQueryTransformer:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Genre\QueryTransformer\FindGenreQueryTransformer
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['MyContext\Infrastructure\Persistence\Adapter\Query\Orm\Genre\QueryBuilder\FindGenreQueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindMovieQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
            #
            # DOCUMENT TRANSFORMER/QUERY BUILDER
            #
            - FindDocumentQueryBuilder:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Document\QueryBuilder\FindDocumentQueryBuilder
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['Doctrine\ORM\QueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
            - FindDocumentQueryTransformer:
                  create: true
                  class: Infrastructure\Persistence\Adapter\Query\Orm\Document\QueryTransformer\FindDocumentQueryTransformer
                  arguments: ~
                  extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                  options:
                      uses: ['MyContext\Infrastructure\Persistence\Adapter\Query\Orm\Document\QueryBuilder\FindDocumentQueryBuilder']
                      models:
                      - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindMovieQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
