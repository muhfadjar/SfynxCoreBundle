default:
    namespace: PromotionContext
    cqrs: Offer\Command
    template: default
    indentation: 4
    widgets:
        presentation:
            widget_coordination:
                class: Form4Coordination
                arguments:
                    - '$workflowHandler'
                extends: ~
                options:
                    implements: ~
                    uses:
                      - 'Symfony\Component\HttpFoundation\Response'
                      - 'Exception'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\ViolationEntityException'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\NotFoundEntityException'
                    traits: ['Sfynx\CoreBundle\Layers\Presentation\Coordination\Generalisation\Traits\TraitParam']
                body:
                    - codeComment1:
                        design: 'code'
                        content:
                          - 'try {'
                          - "// 1. Transform options to Command."
                    - updateCommand:
                        design: 'adapter'
                        class: Sfynx\CoreBundle\Layers\Presentation\Adapter\Command\CommandAdapter
                        arguments:
                            - 'new Offer4FormCommand'
                        calls:
                            - [ createCommandFromRequest, [ 'new Offer4FormRequest', 'false' ] ]
                    - commandWorkflow:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Workflow\CommandWorkflow
                        calls:
                            - [ attach, [ 'new OBOffer4EntityEdit' ] ]
                            - [ attach, [ 'new OBOffer4EntityCreate' ] ]
                    - commandHandlerResult:
                        design: 'decorator'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Handler\CommandHandler
                        arguments:
                            - '$commandWorkflow'
                            - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                        handlers: [ 'Offer4FormCommandValidationHandler', 'Offer4FormCommandSpecHandler']
                        calls:
                            - [ process, [ '$updateCommand' ] ]
                    - codeln1:
                        design: 'code'
                        content:
                          - "// 4. Implement the Response workflow"
                          - "$this->setParam('templating', '@Business/Offer/edit.html.twig');"
                    - workflowHandler:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Common\Handler\WorkflowHandler
                        calls:
                            - [ attach, [ 'new OBOffer4CreateFormData' ] ]
                            - [ attach, [ 'new OBCreateCommandFormView' ] ]
                            - [ attach, [ 'new OBInjectFormErrors' ] ]
                            - [ attach, [ 'new OBOffer4CreateFormBody' ] ]
                            - [ attach, [ 'new OBCreateResponseHtml' ] ]
                    - responseHandlerResult:
                        design: 'handler'
                        class: Sfynx\CoreBundle\Layers\Application\Response\Handler\ResponseHandler
                        arguments:
                            - '$workflowHandler'
                        calls:
                            - [ process, [ '$commandHandlerResult' ] ]
                    - codeln2:
                        design: 'code'
                        content:
                          - "$response = $responseHandlerResult->getResponse();"
                          - '}  catch (NotFoundEntityException $e) {'
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_NOT_FOUND);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (ViolationEntityException $e) {'
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_CONFLICT);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (Exception $e) {'
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_SERVICE_UNAVAILABLE);'
                          - '    $response->setContent($e->getMessage());'
                          - '}'
                          - ''
                          - 'return $response;'
            widget_request:
                class: Offer4FormRequest
                arguments:
                  - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        application:
            widget_cqrs_command:
                - Offer4FormCommand:
                    create: true
                    class: Offer4FormCommand
                    options:
                        traits:
                          - 'Sfynx\CoreBundle\Layers\Application\Common\Generalisation\Traits\TraitCreateInstanceFromNative'
#                        models:
#                          0:
#                            class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\CommandQueryObject'
#                            parameters:
#                              performMethods:
#                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Construct'
#                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\CreateFromNative'
#                              # createFromNativeType = ['general_arg', 'specific_arg']
#                              createFromNativeType: 'general_arg'
            widget_cqrs_command_validator_specification:
                class: Validation\SpecHandler\Offer4FormCommandSpecHandler
                arguments:
                  - '$commandHandlerResult'
            widget_cqrs_command_validator_validation:
                class: Validation\ValidationHandler\Offer4FormCommandValidationHandler
                arguments:
                  - '$commandHandlerResult'
                  - 'new SymfonyValidatorStrategy'
                  - 'false'
            widget_service_app_class:
                - SymfonyValidatorStrategy:
                    create: false
                    class: 'Sfynx\CoreBundle\Layers\Application\Validation\Validator\SymfonyValidatorStrategy'
                    arguments: ['Symfony\Component\Validator\Validator\ValidatorInterface']
            widget_validation_type:
                class: Offer4Type
                arguments: ~
        domain:
            widget_entity: true
            widget_service_manager_class:
                - OfferEntityManager:
                    create: true
                    class: Offer\Manager\Tmp4OfferManager
                    arguments: ~
                    options:
                        entity: 'Offer'
            widget_workflow_observer_class:
                - OBOffer4EntityCreate:
                    create: true
                    class: OBOffer4EntityCreate
                    arguments:
                      - 'Psr\Log\LoggerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      - 'bool $updateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $updateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityCreateHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBOffer4EntityEdit:
                    create: true
                    class: OBOffer4EntityEdit
                    arguments:
                      - 'Psr\Log\LoggerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      - 'bool $updateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $updateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityEditHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBOffer4CreateFormData:
                    create: true
                    class: Domain\Workflow\Observer\Offer\Response\OBOffer4CreateFormData
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'PromotionContext\Domain\Service\Entity\Template\TemplateManager'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($request);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormData
                    options:
                        implements: ~
                        uses: ['Sfynx\CoreBundle\Layers\Infrastructure\Exception\WorkflowException', 'Exception']
                        traits: ~
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\FormData', parameters: []}
                - OBOffer4CreateFormBody:
                    create: true
                    class: Domain\Workflow\Observer\Offer\Response\OBOffer4CreateFormBody
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Templating\EngineInterface'
                      - '$this->param'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormBody
                    options:
                        implements: ~
                        uses: ['Sfynx\CoreBundle\Layers\Infrastructure\Exception\WorkflowException', 'Exception']
                        traits: ~
                        methods:
                          - name: 'process'
                            comments: ['{@inheritdoc}']
                            visibility: 'protected'
                            returnType: 'bool'
                            body:
                              - "$this->wfLastData->body = '';"
                              - 'try {'
                              - "    $this->wfLastData->body = $this->templating->render("
                              - "        $this->param->templating,"
                              - '        ['
                              - "           'entity' => $this->wfHandler->entity,"
                              - "           'edit_form' => $this->wfLastData->form->createView(),"
                              - "           'errors_form' => $this->wfHandler->errors"
                              - '        ]'
                              - '    );'
                              - '} catch (Exception $e) {'
                              - '    throw WorkflowException::noCreatedViewForm();'
                              - '}'
                              - 'return true;'
                - OBCreateCommandFormView:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateCommandFormView
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Form\FormFactoryInterface'
                      - 'Sfynx\CoreBundle\Layers\Application\Validation\Type\Generalisation\Interfaces\FormTypeInterface'
#                      - 'new Offer4Type'
                - OBInjectFormErrors:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBInjectFormErrors
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Translation\TranslatorInterface'
                - OBCreateResponseHtml:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateResponseHtml
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        infrastructure:
            widget_security_parse: true
    mapping:
        x-providers: [orm, couchdb]
        x-entities:
#          Offer:
#            x-fields:
#              id:
#                name: entityId
#                type: id
#                primaryKey: true
#              template:
#                type: id
#                foreignKey: true
#                required: true
#                mapping:
#                  relationship: ManyToOne
#                  targetEntity: PromotionContext\Domain\Entity\Template
          Offer:
            x-fields:
              id:
                name: entityId
                type: valueObject
                voName: IdVO
                primaryKey: true
              template:
                type: valueObject
                voName: IdVO
                foreignKey: true
                required: true
                mapping:
                  relationship: ManyToOne
                  targetEntity: PromotionContext\Domain\Entity\Template
                  manager: 'PromotionContext\Domain\Service\Entity\Template\TemplateManager'
        x-valueObjects:
          IdVO:
            type: Sfynx\CoreBundle\Layers\Domain\ValueObject\IdVO
            x-fields:
              id:
                type: id