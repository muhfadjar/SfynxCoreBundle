default:
    namespace: Sfynx\AuthBundle
    cqrs: Role\Command
    template: default
    indentation: 4
    widgets:
        presentation:
            widget_coordination:
                class: FormCoordination
                arguments:
                    - '$workflowHandler'
                extends: ~
                options:
                    implements: ~
                    uses:
                      - 'Symfony\Component\HttpFoundation\Response'
                      - 'Exception'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\ViolationEntityException'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\NotFoundEntityException'
                    traits: ['Sfynx\CoreBundle\Layers\Presentation\Coordination\Generalisation\Traits\TraitParam']
                body:
                    - codeComment1:
                        design: 'code'
                        content:
                          - 'try {'
                          - "    // 1. Transform options to Command."
                    - updateCommand:
                        design: 'adapter'
                        class: Sfynx\CoreBundle\Layers\Presentation\Adapter\Command\CommandAdapter
                        arguments:
                            - 'new RoleFormCommand'
                        calls:
                            - [ createCommandFromRequest, [ 'new RoleFormRequest', 'false' ] ]
                    - codeComment2:
                        design: 'code'
                        content: "// 2. Implement the command workflow"
                    - commandWorkflow:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Workflow\CommandWorkflow
                        calls:
                            - [ attach, [ 'new OBRoleEntityEdit' ] ]
                            - [ attach, [ 'new OBRoleEntityCreate' ] ]
                    - codeComment3:
                        design: 'code'
                        content: "// 3. Implement decorator to apply the command workflow from the command"
                    - commandHandlerResult:
                        design: 'decorator'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Handler\CommandHandler
                        arguments:
                            - '$commandworkflow'
                            - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                        handlers: [ 'RoleFormCommandValidationHandler', 'RoleFormCommandSpecHandler']
                        calls:
                            - [ process, [ '$updateCommand' ] ]
                    - codeln1:
                        design: 'code'
                        content:
                          - "// 4. Implement the Response workflow"
                          - "$this->setParam('templating', '@Business/Role/edit.html.twig');"
                    - workflowHandler:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Common\Handler\WorkflowHandler
                        calls:
                            - [ attach, [ 'new OBRoleCreateFormData' ] ]
                            - [ attach, [ 'new OBCreateCommandFormView' ] ]
                            - [ attach, [ 'new OBInjectFormErrors' ] ]
                            - [ attach, [ 'new OBRoleCreateFormBody' ] ]
                            - [ attach, [ 'new OBCreateResponseHtml' ] ]
                    - responseHandlerResult:
                        design: 'handler'
                        class: Sfynx\CoreBundle\Layers\Application\Response\Handler\ResponseHandler
                        arguments:
                            - '$Workflowhandler'
                        calls:
                            - [ process, [ '$commandHandlerResult' ] ]
                    - codeln2:
                        design: 'code'
                        content:
                          - "    $response = $responseHandlerResult->getResponse();"
                          - ""
                          - "    $this->logger->info('Request has been sent from this Command', ['command' => $updateCommand]);"
                          - '}  catch (NotFoundEntityException $e) {'
                          - "    $this->logger->error('Request has failed with NotFoundEntityException exception', ['command' => $updateCommand]);"
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_NOT_FOUND);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (ViolationEntityException $e) {'
                          - "    $this->logger->error('Request has failed with ViolationEntityException exception', ['command' => $updateCommand]);"
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_CONFLICT);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (Exception $e) {'
                          - "    $this->logger->error('Request has failed with HTTP_SERVICE_UNAVAILABLE exception', ['command' => $updateCommand]);"
                          - '    $response = new Response();'
                          - '    $response->setStatusCode(Response::HTTP_SERVICE_UNAVAILABLE);'
                          - '    $response->setContent($e->getMessage());'
                          - '}'
                          - ''
                          - 'return $response;'
            widget_request:
                class: RoleFormRequest
                arguments:
                  - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        application:
            widget_cqrs_command:
                - RoleFormCommand:
                    create: true
                    class: RoleFormCommand
                    options:
                        traits:
                          - 'Sfynx\CoreBundle\Layers\Application\Common\Generalisation\Traits\TraitCreateInstanceFromNative'
#                        models:
#                          0:
#                            class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\CommandQueryObject'
#                            parameters:
#                              performMethods:
#                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Construct'
#                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\CreateFromNative'
#                              # createFromNativeType = ['general_arg', 'specific_arg']
#                              createFromNativeType: 'general_arg'
            widget_cqrs_command_validator_specification:
                class: Validation\SpecHandler\RoleFormCommandSpecHandler
                arguments:
                  - '$commandHandlerResult'
            widget_cqrs_command_validator_validation:
                class: Validation\ValidationHandler\RoleFormCommandValidationHandler
                arguments:
                  - '$commandHandlerResult'
                  - 'new SymfonyValidatorStrategy'
                  - 'false'
            widget_service_app_class:
                - SymfonyValidatorStrategy:
                    create: false
                    class: 'Sfynx\CoreBundle\Layers\Application\Validation\Validator\SymfonyValidatorStrategy'
                    arguments: ['Symfony\Component\Validator\Validator\ValidatorInterface']
            widget_validation_type:
                class: RoleType
                arguments: ~
        domain:
            #
            # ENTITY CLASSES
            #
            widget_entity_class:
                - RoleEntity:
                    create: true
                    class: Domain\Entity\Role
#                    arguments: ['Sfynx\AuthBundle\Domain\ValueObject\RoleVO']
                    options:
                        mapping: 'Role'
                        traits:
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitBuild'
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitEnabled'
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitName'
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitDatetime'
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitHeritage'
                          - 'Sfynx\AuthBundle\Domain\Generalisation\TraitAccessControl'
                        models:
#                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\Entity', parameters: { performMethod: ['Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Construct']} }
                          0:
                            class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\Entity'
                            parameters:
                              performMethods:
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Construct'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\CreateFromNative'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\ToString'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\ToArray'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Serialize'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Unserialize'
                - RoleVO:
                    create: true
                    class: Domain\ValueObject\RoleVO
                    extends: 'Sfynx\CoreBundle\Layers\Domain\ValueObject\Generalisation\AbstractVO'
                    options:
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\ValueObject', parameters: []}
            #
            # MANAGER CLASSES
            #
            widget_service_manager_class:
                - RoleEntityManager:
                    create: true
                    class: Entity\Role\Manager\RoleManager
                    arguments: ~
                    options:
                        entity: 'Role'
            #
            # SERVICES CLASSES
            #
            widget_service_class:
                #
                # ROLE REPOSITORY INTERFACES
                #
                - RoleCommandRepositoryInterface:
                    create: true
                    class: Domain\Repository\Command\RoleCommandRepositoryInterface
                    type: interface
                - RoleQueryRepositoryInterface:
                    create: true
                    class: Domain\Repository\Query\RoleQueryRepositoryInterface
                    type: interface
            #
            # OBSERVER CLASSES
            #
            widget_workflow_observer_class:
                #
                # LOGICAL RESPONSE HANDLER
                #
                - OBRoleEntityCreate:
                    create: true
                    class: OBRoleEntityCreate
                    arguments:
                      - 'Psr\Log\LoggerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      - 'bool $isUpdateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $isUpdateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityCreateHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBRoleEntityEdit:
                    create: true
                    class: OBRoleEntityEdit
                    arguments:
                      - 'Psr\Log\LoggerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      - 'bool $isUpdateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $isUpdateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityEditHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBRoleCreateFormData:
                    create: true
                    class: Domain\Workflow\Observer\Role\Response\OBRoleCreateFormData
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Sfynx\AuthBundle\Domain\Service\Role\Manager\EntityManager as RoleManager'
                      - 'Sfynx\AuthBundle\Domain\Service\Layout\Manager\EntityManager as LayoutManager'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($request);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormData
                    options:
                        implements: ~
                        uses: ['Sfynx\CoreBundle\Layers\Infrastructure\Exception\WorkflowException', 'Exception']
                        traits: ~
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\FormData', parameters: []}
                - OBRoleCreateFormBody:
                    create: true
                    class: Domain\Workflow\Observer\Role\Response\OBRoleCreateFormBody
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Templating\EngineInterface'
                      - '$this->param'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormBody
                    options:
                        implements: ~
                        uses: ['Sfynx\CoreBundle\Layers\Infrastructure\Exception\WorkflowException', 'Exception']
                        traits: ~
                        methods:
                          - name: 'process'
                            comments: ['{@inheritdoc}']
                            visibility: 'protected'
                            returnType: 'bool'
                            body:
                              - "$this->wfLastData->body = '';"
                              - 'try {'
                              - "    $this->wfLastData->body = $this->templating->render("
                              - "        $this->param->templating,"
                              - '        ['
                              - "           'entity' => $this->wfHandler->entity,"
                              - "           'edit_form' => $this->wfLastData->form->createView(),"
                              - "           'errors_form' => $this->wfHandler->errors"
                              - '        ]'
                              - '    );'
                              - '} catch (Exception $e) {'
                              - '    throw WorkflowException::noCreatedViewForm();'
                              - '}'
                              - 'return true;'
                - OBCreateCommandFormView:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateCommandFormView
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Form\FormFactoryInterface'
#                      - 'Sfynx\CoreBundle\Layers\Application\Validation\Type\Generalisation\Interfaces\FormTypeInterface'
                      - 'new RoleType'
                - OBInjectFormErrors:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBInjectFormErrors
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Translation\TranslatorInterface'
                - OBCreateResponseHtml:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateResponseHtml
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        infrastructure:
            widget_security_parse: true
            widget_infra_class:
                #
                # ROLE REPOSITORIES
                #
                - CommandRoleRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Command\Orm\RoleRepository
                    arguments: ~
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                    options:
                        implements: ['Domain\Repository\Command\RoleCommandRepositoryInterface']
                        uses: ~
                        traits: ~
                - QueryRoleRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\RoleRepository
                    arguments: ~
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                    options:
                        implements: ['Domain\Repository\Query\RoleQueryRepositoryInterface']
                        uses: ~
                        traits: ~
                #
                # LAYOUT TRANSFORMER/QUERY BUILDER
                #
                - FindLayoutQueryBuilder:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\Layout\QueryBuilder\FindLayoutQueryBuilder
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Doctrine\ORM\QueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
                - FindLayoutQueryTransformer:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\Layout\QueryTransformer\FindLayoutQueryTransformer
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Sfynx\AuthBundle\Infrastructure\Persistence\Adapter\Query\Orm\Layout\QueryBuilder\FindLayoutQueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindLayoutQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
                #
                # RESSOURCE TRANSFORMER/QUERY BUILDER
                #
                - FindRessourceQueryBuilder:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\Layout\QueryBuilder\FindRessourceQueryBuilder
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Doctrine\ORM\QueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
                - FindRessourceQueryTransformer:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\Layout\QueryTransformer\FindRessourceQueryTransformer
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Sfynx\AuthBundle\Infrastructure\Persistence\Adapter\Query\Orm\Ressource\QueryBuilder\FindRessourceQueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindLayoutQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
    mapping:
        x-providers: [orm, couchdb]
        x-entities:
          Role:
            x-fields:
              id:
                name: entityId
                type: valueObject
                voName: IdVO
                primaryKey: true
                mapping:
                  targetEntity: 'Sfynx\AuthBundle\Domain\Entity\Role'
#                  formData:
#                      manager: 'Sfynx\AuthBundle\Domain\Service\Role\Manager\EntityManager as RoleManager'
              layout:
                type: valueObject
                voName: IdVO
                foreignKey: true
                required: true
                choice_label: Layout
                mapping:
                  relationship: ManyToOne
                  targetEntity: 'Sfynx\AuthBundle\Domain\Entity\Layout'
                  setter: true
                  formData:
                      manager: 'Sfynx\AuthBundle\Domain\Service\Layout\Manager\EntityManager as LayoutManager'
                      queryFunction: { class: 'FindLayoutQueryTransformer', args: ['true', 'false', 1299, {tata: 'tataValue', tutu: 'tutuValue'}] }
              accessControl:
                type: valueObject
                voName: IdVO
                foreignKey: true
                required: true
                choice_label: Ressource
                mapping:
                  relationship: ManyToOne
                  targetEntity: 'Sfynx\AuthBundle\Domain\Entity\Ressource'
                  formData:
                      manager: 'Sfynx\AuthBundle\Domain\Service\Ressource\Manager\EntityManager as RessourceManager'
                      queryFunction: { class: 'FindRessourceQueryTransformer', args: ['true', 'false', 1299, {tata: 'tataValue', tutu: 'tutuValue'}] }
              role:
                type: valueObject
                voName: RoleVO
        x-valueObjects:
          IdVO:
            type: 'Sfynx\CoreBundle\Layers\Domain\ValueObject\IdVO'
            create: false
            x-fields:
              id:
                type: id
          RoleVO:
            type: 'Domain\ValueObject\RoleVO'
            create: true
            x-fields:
              name:
                type: string
                required: true
              label:
                type: string
                required: true
              enabled:
                type: boolean
                defaultValue: true
#                required: false
              comment:
                type: textarea
                required: false
              heritage:
                type: array
                form:
                  type: array
                  serviceType: sfynx_security_roles
                required: true
                multiple: true
                expanded: false
              routeLogin:
                type: string
                form:
                  type: array
                  serviceType: sfynx_routes
                required: false
                multiple: false
                expanded: false
              routeLogout:
                type: string
                form:
                  type: array
                  serviceType: sfynx_routes
                required: false
                multiple: false
                expanded: false
